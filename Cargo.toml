[package]
name = "laya"
version = "0.1.0"
edition = "2024"
license = "Apache-2.0 OR MIT"
publish = false
rust-version = "1.85"

# Config for 'cargo dist'
[[workspace.metadata.distributions]]
name = "x64-generic"
triple = "x86_64-unknown-linux-gnu"
cpu = "x86-64-v3"
runner = "ubuntu-24.04"
docker = "linux/amd64"
generic = true

[[workspace.metadata.distributions]]
name = "arm64-generic"
triple = "aarch64-unknown-linux-gnu"
cpu = "neoverse-v2"
generic = true
docker = "linux/arm64/v8"
runner = "ubuntu-24.04-arm"

[[workspace.metadata.distributions]]
name = "x86-64-v4"
triple = "x86_64-unknown-linux-gnu"
cpu = "x86-64-v4"
docker = "linux/amd64/v4"

[[workspace.metadata.distributions]]
name = "x86-64-v3"
triple = "x86_64-unknown-linux-gnu"
cpu = "x86-64-v3"
docker = "linux/amd64/v3"

[[workspace.metadata.distributions]]
triple = "aarch64-unknown-linux-gnu"
cpu = "neoverse-v2"
name = "aws-graviton4"
runner = "ubuntu-24.04-arm"
docker = "linux/arm64/v8"

[[workspace.metadata.distributions]]
name = "apple"
triple = "aarch64-apple-darwin"
cpu = "apple-latest"
runner = "macos-15"
docker = false

[profile.release]
lto = "thin"
opt-level = 3
codegen-units = 1
incremental = false
debug = "full"
split-debuginfo = "packed"

[features]
default = ["rt-tokio", "kaduceus", "opendal", "mimalloc"]
kaduceus = ["dep:kaduceus"]
opendal = ["dep:opendal"]
mimalloc = ["dep:mimalloc"]
rt-tokio = ["dep:tokio"]
rt-glommio = []

[dependencies]
byte-unit = { version = "5.1.6", features = ["serde"] }
clap = { version = "4", features = ["derive"] }
color-eyre = { version = "0.6" }
kaduceus = { version = "0.1.0", git = "https://github.com/digirati-co-uk/kaduceus", optional = true }
futures = { version = "0.3" }
http-body = { version = "1" }
http-body-util = { version = "0.1" }
hyper = { version = "1.6", features = ["server", "http2", "http1"] }
hyper-util = { version = "0.1", features = [
    "server-auto",
    "server",
    "service",
    "http2",
    "http1",
    "tokio",
] }
opendal = { version = "0.52", optional = true, features = [
    "layers-tracing",
    "services-s3",
    "services-fs",
] }
opentelemetry = { version = "0.28", features = ["trace", "metrics"] }
opentelemetry-appender-tracing = { version = "0.28", features = [
    "tracing-opentelemetry",
    "experimental_metadata_attributes",
    "experimental_use_tracing_span_context",
] }
opentelemetry-aws = "0.16.0"
opentelemetry-http = { version = "0.28" }
opentelemetry_sdk = { version = "0.28", default-features = false, features = [
    "trace",
    "rt-tokio",
    "experimental_trace_batch_span_processor_with_async_runtime",
    "experimental_logs_batch_log_processor_with_async_runtime",
] }
opentelemetry-otlp = { version = "0.28", default-features = false, features = [
    "trace",
    "logs",
    "http-proto",
    "reqwest-client",
] }
opentelemetry-resource-detectors = "0.7"
opentelemetry-semantic-conventions = { version = "0.28", features = [
    "semconv_experimental",
] }
serde = { version = "1", features = ["derive"] }
serde_json = { version = "1", features = ["preserve_order"] }
tracing = { version = "0.1" }
tracing-error = { version = "0.2" }
tracing-opentelemetry = { version = "0.29" }
tracing-opentelemetry-instrumentation-sdk = { version = "0.26.0", features = [
    "http",
    "tracing_level_info",
] }
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
tokio = { version = "1.44", features = ["full"], optional = true }
tower = { version = "0.5", features = ["tracing", "util"] }
tower-http = { version = "0.6", features = [
    "cors",
    "catch-panic",
    "normalize-path",
    "sensitive-headers",
    "request-id",
    "timeout",
    "trace",
    "tracing",
] }
urlencoding = { version = "2" }
bytes = "1.10.1"
tokio-util = { version = "0.7.13", features = ["io"] }
mediatype = "0.19.20"
palette = "0.7.6"
chrono = "0.4.40"
httpdate = "1.0.3"
tokio-stream = "0.1.17"
mozjpeg = { version = "0.10.13", features = ["parallel", "with_simd"] }
mimalloc = { version = "0.1", optional = true }
