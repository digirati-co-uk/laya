name: Checks
on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

env:
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTUP_MAX_RETRIES: 10
  KDU_ROOT: ${{ github.workspace }}/kakadu

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-24.04
    permissions:
      id-token: write
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          persist-credentials: true

      - name: "Authenticate to AWS"
        uses: catnekaise/cognito-idpool-auth@main
        with:
          auth-flow: "enhanced"
          cognito-identity-pool-id: "eu-west-1:48b1e5ba-eed1-47f9-b45e-a4b27a2798c3"
          aws-account-id: "144289631794"
          aws-region: "eu-west-1"
          set-in-environment: true

      - uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.KAKADU_SSH_KEY }}
          repository: digirati-co-uk/kakadu
          path: kakadu

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - uses: taiki-e/install-action@v2
        with:
          tool: nextest, cargo-llvm-cov

      - name: Run tests
        run: |
          pip install iiif-validator

          cargo llvm-cov nextest
          cargo llvm-cov run -- --prefix=/prefix/ & pid=$!

          if curl --retry 5 --retry-delay 2 --retry-connrefused --silent --show-error --fail http://localhost:43594/ | grep -q 'OK!'; then
            iiif-validate.py -s localhost:43594 -p prefix -i image_id --version=2.0 -v || true
            kill $pid
          else
            echo "Failed to start Laya"
          fi
          cargo llvm-cov report --lcov --output-path lcov.info
          cargo llvm-cov report --html

          aws s3 cp s3://digirati-ci-artifacts/digirati-co-uk/main/llvm-cov target/llvm-cov
        env:
          CARGO_TERM_COLOR: always
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}


      - name: Upload coverage report
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: target/llvm-cov/html



  cargo-deny:
    name: Check dependencies
    runs-on: ubuntu-24.04
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          persist-credentials: true

      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-deny
      - run: cargo deny check

  clippy:
    name: Clippy
    runs-on: ubuntu-24.04
    permissions:
      id-token: write
      actions: read
      security-events: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          persist-credentials: true

      - uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.KAKADU_SSH_KEY }}
          repository: digirati-co-uk/kakadu
          path: kakadu

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - uses: taiki-e/install-action@v2
        with:
          tool: clippy-sarif, sarif-fmt
      - run: cargo clippy --workspace --all-targets --all-features --message-format=json -- -Aunused | clippy-sarif | tee results.sarif | sarif-fmt

      # Requires GitHub Advanced Security
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif

  fmt:
    name: Formatting
    runs-on: ubuntu-24.04
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          persist-credentials: true

      - uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.KAKADU_SSH_KEY }}
          repository: digirati-co-uk/kakadu
          path: kakadu

      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - run: cargo +nightly fmt --all --check
