name: Build containers

on:
  push:

env:
  REGISTRY_IMAGE: digirati-co-uk/laya

jobs:
  build:
    name: "${{ matrix.build_configuration.name }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build_configuration:
          - platform: linux/amd64
            triple: x86_64-unknown-linux-gnu
            cpu: znver4
            name: AMD Zen4

          - platform: linux/amd64
            triple: x86_64-unknown-linux-gnu
            cpu: sapphirerapids
            name: Intel Xeon Gen4

          - platform: linux/arm/v8
            triple: aarch64-unknown-linux-gnu
            cpu: neoverse-v2
            name: AWS Graviton4
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.build_configuration.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.build_configuration.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=false
          build-args: |
            TARGET=${{ matrix.build_configuration.triple }}
            TARGET_CPU=${{ matrix.build_configuration.cpu }}

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
