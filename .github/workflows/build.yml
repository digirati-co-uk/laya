name: Build containers

on:
  push:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: "${{ matrix.build_configuration.name }}"
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-${{ matrix.build_configuration.name }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        build_configuration:
          - platform: linux/amd64
            triple: x86_64-unknown-linux-gnu
            cpu: znver4
            name: amd-zen4

          - platform: linux/amd64
            triple: x86_64-unknown-linux-gnu
            cpu: sapphirerapids
            name: intel-xeon-gen4

          - platform: linux/arm64/v8
            triple: aarch64-unknown-linux-gnu
            cpu: neoverse-v2
            name: aws-graviton4
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.build_configuration.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            # tag event
            type=ref,enable=true,priority=600,prefix=,suffix=,event=tag
            # pull request event
            type=ref,enable=true,priority=600,prefix=pr-,suffix=,event=pr
          labels: |
            target-cpu=${{ matrix.build_configuration.cpu }}
            target-triple=${{ matrix.build_configuration.triple }}
          flavor: |
            latest=auto
            prefix=
            suffix=-${{ matrix.build_configuration.name }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.build_configuration.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          push: true
          build-args: |
            TARGET=${{ matrix.build_configuration.triple }}
            TARGET_CPU=${{ matrix.build_configuration.cpu }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.build_configuration.name }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
